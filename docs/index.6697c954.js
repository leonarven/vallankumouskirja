var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},n={},t={},o=e.parcelRequiree6cf;null==o&&((o=function(e){if(e in n)return n[e].exports;if(e in t){var o=t[e];delete t[e];var s={id:e,exports:{}};return n[e]=s,o.call(s.exports,s,s.exports),s.exports}var l=new Error("Cannot find module '"+e+"'");throw l.code="MODULE_NOT_FOUND",l}).register=function(e,n){t[e]=n},e.parcelRequiree6cf=o);var s=o("e7xqE"),l=o("9WcD4"),r=o("l0BTa"),i=o("bAn0Q"),a=o("eGDm7"),g=o("5fjzI");angular.module("laulukirja-app",["ui.router"]).constant("songs",g.default).service("Songs",l.default).service("fontService",s.default).controller("songListController",i.default).controller("songViewController",a.default).controller("songMetaController",r.default).config(["$stateProvider","$urlRouterProvider",function(e,n){n.otherwise("/index"),e.state("index",{url:"/index",views:{"songsList@":{controller:"songListController",template:'\n<div id="search">\n<input type="text" class="form-control" placeholder="Hae..." ng-model="$root.search" ng-change="runFilter()">\n\n<a class="clear-btn glyphicon glyphicon-remove" ng-if="$root.search.trim().length" ng-click="runFilter(\'\')"></a>\n</div>\n\n<ul id="songlist" class="songs-list-group list-group">\n<li class="list-group-item"\n    ng-repeat="song in Songs.sorted"\n    ng-hide="song.$$filtered"\n    ng-class="{ \'active\' : $root.$state.params.song_key == song.key }">\n\n\t<a ui-sref="index.song({ \'song_key\' : song.key })">\n\t\t<h4 class="title"><b class="number">{{ song.num }}</b> &ndash; {{ song.title }}</h4>\n\t</a>\n</li>\n\n<li class="list-group-item no-results" ng-if="songsCount == 0">\n\t<b><h4>{{ (songsCount == 0) ? \'Ei lauluja :&lt;\' : \'...\' }}</h4></b>\n</li>\n</ul>'},"songView@":{controller:["$scope","$timeout",function(e,n){e.loading=n((()=>{e.loading=!1}))}],template:"<h3 style='text-align:left;padding-left:1em;'><b class='glyphicon glyphicon-share-alt' style='transform:rotate(230deg);'></b> Valitse laulu laululistasta</h3>"}},resolve:{songsIndex:["Songs",e=>e.init("songs/index.json")]}}).state("index.song",{url:"/:song_key",views:{"songView@":{controller:"songViewController",template:'\n<pre ng-init="init()" ng-include="$song.$templateUrl" id="song-body" ng-style="{ \'font-size\' : ($root.font.size / 10.0) + \'em\' }"></pre>\n\t\t\t\t'},"songMeta@":{controller:"songMetaController",template:'\n<div id="songmeta">\n<h2 class="title">{{ meta.title }}</h2>\n<h3 class="author">{{ meta.author }}</h3>\n<p class="description">{{ meta.description }}</p>\n<ul class="links">\n\t<li ng-repeat="link in meta.links">\n\t\t<a ng-href="{{ link.href }}" target="_blank" href="#"><i class="glyphicon glyphicon-link"></i> {{link.title}}</a>\n\t</li>\n</ul>\n</div>'}},resolve:{$song:["$stateParams","$templateRequest","$sce","songsIndex",function(e,n,t,o){var s=e.song_key,l=o[s];if(!l)throw"Could not found song '"+s+"'";return l.lyrics?l:n(l.$templateUrl).then((e=>(l.lyrics=e,l.$lyrics=t.trustAsHtml(e),l)))}]}})}]).run(["$rootScope","$state","$timeout","$templateCache","Songs","fontService",function(e,n,t,o,s){e.$state=n,e.songsIndex={},e.search="",e.songlist={open:!0},window.addEventListener("resize",e.$emit.bind(e,"resize")),e.$watch("songlist.open",e.$emit.bind(e,"resize")),e.$on("$stateChangeStart",((n,t,o,s,l,r)=>{try{"index"==t.name&&(e.$song=null)}catch(e){console.error(e),n.preventDefault()}})),e.$on("$stateChangeError",(function(e,n,t,o,s){console.error("$stateChangeError @ "+n.to,arguments)})),e.$on("$stateChangeSuccess",(function(n,t,o,s,l){console.log("$stateChangeSuccess @ "+t.to,arguments),"index"==t.name&&(e.songlist.open=!0),angular.element(document.body).attr("state",t.name)})),e.$on("$viewContentLoaded",(function(e){console.log("$viewContentLoaded",arguments)})),e.$on("$stateNotFound",(function(e,n,t,o){console.error("$stateNotFound @ "+n.to,arguments)}))}]);